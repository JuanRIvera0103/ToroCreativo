#pragma checksum "E:\Proyecto\ToroCreativo\ToroCreativo\ToroCreativo\Views\Informes\InformesCategorias.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "7c163d676e1a412192d5240467579e53523645c6"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Informes_InformesCategorias), @"mvc.1.0.view", @"/Views/Informes/InformesCategorias.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "E:\Proyecto\ToroCreativo\ToroCreativo\ToroCreativo\Views\_ViewImports.cshtml"
using ToroCreativo;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "E:\Proyecto\ToroCreativo\ToroCreativo\ToroCreativo\Views\_ViewImports.cshtml"
using ToroCreativo.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"7c163d676e1a412192d5240467579e53523645c6", @"/Views/Informes/InformesCategorias.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"7a62e77cc898383c5c3eefa6bf192863ca3ea6e5", @"/Views/_ViewImports.cshtml")]
    public class Views_Informes_InformesCategorias : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<IEnumerable<ToroCreativo.Clases.InformesDatos>>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/detalle_informe.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "E:\Proyecto\ToroCreativo\ToroCreativo\ToroCreativo\Views\Informes\InformesCategorias.cshtml"
  
    ViewData["Title"] = "Informes Produtos más pedidos " + TempData["Tipo"];
    var datos = ViewBag.Datos;

#line default
#line hidden
#nullable disable
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "7c163d676e1a412192d5240467579e53523645c64169", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n<h1>Informes Categorías más vendidas ");
#nullable restore
#line 8 "E:\Proyecto\ToroCreativo\ToroCreativo\ToroCreativo\Views\Informes\InformesCategorias.cshtml"
                                Write(TempData["Tipo"]);

#line default
#line hidden
#nullable disable
            WriteLiteral("</h1>\r\n<div class=\"informes\">\r\n    <a");
            BeginWriteAttribute("href", " href=\"", 323, "\"", 330, 0);
            EndWriteAttribute();
            WriteLiteral(@" title=""Descargar Informe""><i class=""fas fa-download""></i></a>
    <div class=""lineas"">
        <canvas id=""lineas"" width=""100"" height=""30""></canvas>
    </div>
    <div class=""sub-informes"">
        <div class=""barras"">
            <canvas id=""barras"" width=""100"" height=""100""></canvas>
        </div>
        <div class=""circulo"">
            <canvas id=""circulo"" width=""150"" height=""100""></canvas>
        </div>
        <div class=""tabla"">
            <table class=""table table-hover"">
                <thead>
                    <tr>
                        <th>
                            ");
#nullable restore
#line 26 "E:\Proyecto\ToroCreativo\ToroCreativo\ToroCreativo\Views\Informes\InformesCategorias.cshtml"
                       Write(Html.DisplayNameFor(model => model.Nombre));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                        </th>\r\n                        <th>\r\n                            ");
#nullable restore
#line 29 "E:\Proyecto\ToroCreativo\ToroCreativo\ToroCreativo\Views\Informes\InformesCategorias.cshtml"
                       Write(Html.DisplayNameFor(model => model.Cantidad));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n\r\n");
#nullable restore
#line 35 "E:\Proyecto\ToroCreativo\ToroCreativo\ToroCreativo\Views\Informes\InformesCategorias.cshtml"
                     foreach (var item in Model)
                    {

#line default
#line hidden
#nullable disable
            WriteLiteral("                        <tr>\r\n                            <td>\r\n                                ");
#nullable restore
#line 39 "E:\Proyecto\ToroCreativo\ToroCreativo\ToroCreativo\Views\Informes\InformesCategorias.cshtml"
                           Write(Html.DisplayFor(modelItem => item.Nombre));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                            </td>\r\n                            <td>\r\n                                ");
#nullable restore
#line 42 "E:\Proyecto\ToroCreativo\ToroCreativo\ToroCreativo\Views\Informes\InformesCategorias.cshtml"
                           Write(Html.DisplayFor(modelItem => item.Cantidad));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                            </td>\r\n                        </tr>\r\n");
#nullable restore
#line 45 "E:\Proyecto\ToroCreativo\ToroCreativo\ToroCreativo\Views\Informes\InformesCategorias.cshtml"
                    }

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<!-- Scripts del proyecto -->\r\n");
            WriteLiteral(@"<script src=""https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js""
        integrity=""sha512-hZf9Qhp3rlDJBvAKvmiG+goaaKRZA6LKUO35oK6EsM0/kjPK32Yw7URqrq3Q+Nvbbt8Usss+IekL7CRn83dYmw==""
        crossorigin=""anonymous""></script>
<!-- Scripts para generar informes chart.js -->
<script>

    var datosjson = JSON.parse('");
#nullable restore
#line 65 "E:\Proyecto\ToroCreativo\ToroCreativo\ToroCreativo\Views\Informes\InformesCategorias.cshtml"
                           Write(Html.Raw(datos));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"');

    var lineas = document.getElementById('lineas').getContext('2d');
    var barras = document.getElementById('barras').getContext('2d');
    var circulo = document.getElementById('circulo').getContext('2d');

    backgrounds = ['rgb(178, 190, 195, 0.5)', 'rgb(108, 92, 231, 0.5)', 'rgb(230, 103, 103, 0.5)', 'rgb(9, 132, 227, 0.5)', 'rgb(0, 184, 148, 0.5)'];
    borders = ['rgb(178, 190, 195)', 'rgb(108, 92, 231)', 'rgb(230, 103, 103)', 'rgb(9, 132, 227)', 'rgb(0, 184, 148)'];
    lineDiagramDataSets = [];
    barDiagramDataSets = [];
    pieDiagramDataSets = [];
    datosNombre = []
    cantidades = [];

    datosjson.forEach(function (item, i) {
        datosNombre.push(datosjson[i].Producto);
        cantidades.push(datosjson[i].Cantidad);
    });
    datosjson.forEach(function (item, i) {
        diagramDataSet = {
            label: datosjson[i].Producto,
            backgroundColor: backgrounds[i],
            borderColor: borders[i],
            data: [0, datosjson[i].Cantida");
            WriteLiteral(@"d],
            fill: false,

        }
        lineDiagramDataSets.push(diagramDataSet);
    });
    datosjson.forEach(function (item, i) {
        diagramDataSet = {
            label: datosjson[i].Producto,
            backgroundColor: backgrounds[i],
            borderColor: borders[i],
            borderWidth: 1,
            data: [datosjson[i].Cantidad],
        }
        barDiagramDataSets.push(diagramDataSet);
    });


    //Graficas realizas con Chart.js
    // Grafica en linea
    var informe_lineas = new Chart(lineas, {
        type: 'line',
        data: {
            datasets: lineDiagramDataSets
        },
        options: {
            responsive: true,
            title: {
                display: true,
                text: 'Diagrama de lineas'
            },
            tooltips: {
                mode: 'index',
                intersect: false,
            },
            hover: {
                mode: 'nearest',
                intersect: true
        ");
            WriteLiteral(@"    },
            scales: {
                yAxes: [{
                    display: true,
                    scaleLabel: {
                        display: true,
                        labelString: 'Cantidad'
                    }
                }]
            }
        }
    });


    //Grafica de barras
    var informe_barras = new Chart(barras, {
        type: 'bar',

        data: {
            datasets: barDiagramDataSets
        },

        options: {
            title: {
                display: true,
                text: 'Diagrama de barras'
            },
            scales: {
                yAxes: [{
                    scaleLabel: {
                        display: true,
                        labelString: 'Cantidad'
                    },
                    ticks: {
                        beginAtZero: true
                    }
                }]
            }
        }
    });

    var informe_circulo = new Chart(circulo, {
        type: 'pie',
 ");
            WriteLiteral(@"       data: {
            labels: datosNombre,
            datasets: [{

                data: cantidades,
                backgroundColor: backgrounds,
                borderColor: borders,
                borderWidth: 1,
                barPercentage: .3,
            }]
        },
        options: {
            title: {
                display: true,
                text: 'Diagrama circular'
            },
        }

    });
</script>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IEnumerable<ToroCreativo.Clases.InformesDatos>> Html { get; private set; }
    }
}
#pragma warning restore 1591
