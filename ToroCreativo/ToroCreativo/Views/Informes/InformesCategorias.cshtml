@model IEnumerable<ToroCreativo.Clases.InformesDatos>
@{
    ViewData["Title"] = "Informes Produtos más pedidos " + TempData["Tipo"];
    var datos = ViewBag.Datos;
}
<link rel="stylesheet" href="~/css/detalle_informe.css">

<h1>Informes Categorías más vendidas @TempData["Tipo"]</h1>
<div class="informes">
    <a href="" title="Descargar Informe"><i class="fas fa-download"></i></a>
    <div class="lineas">
        <canvas id="lineas" width="100" height="30"></canvas>
    </div>
    <div class="sub-informes">
        <div class="barras">
            <canvas id="barras" width="100" height="100"></canvas>
        </div>
        <div class="circulo">
            <canvas id="circulo" width="150" height="100"></canvas>
        </div>
        <div class="tabla">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Nombre)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Cantidad)
                        </th>
                    </tr>
                </thead>
                <tbody>

                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Nombre)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Cantidad)
                            </td>
                        </tr>
                    }


                </tbody>
            </table>
        </div>
    </div>
</div>


<!-- Scripts del proyecto -->
@*<script src="~/lib/Chart.js/chart.min.js"></script>
    <script src="~/lib/Chart.js/chart.esm.min.js"></script>
    <script src="~/lib/Chart.js/helpers.esm.min.js"></script>*@
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js"
        integrity="sha512-hZf9Qhp3rlDJBvAKvmiG+goaaKRZA6LKUO35oK6EsM0/kjPK32Yw7URqrq3Q+Nvbbt8Usss+IekL7CRn83dYmw=="
        crossorigin="anonymous"></script>
<!-- Scripts para generar informes chart.js -->
<script>

    var datosjson = JSON.parse('@Html.Raw(datos)');

    var lineas = document.getElementById('lineas').getContext('2d');
    var barras = document.getElementById('barras').getContext('2d');
    var circulo = document.getElementById('circulo').getContext('2d');

    backgrounds = ['rgb(178, 190, 195, 0.5)', 'rgb(108, 92, 231, 0.5)', 'rgb(230, 103, 103, 0.5)', 'rgb(9, 132, 227, 0.5)', 'rgb(0, 184, 148, 0.5)'];
    borders = ['rgb(178, 190, 195)', 'rgb(108, 92, 231)', 'rgb(230, 103, 103)', 'rgb(9, 132, 227)', 'rgb(0, 184, 148)'];
    lineDiagramDataSets = [];
    barDiagramDataSets = [];
    pieDiagramDataSets = [];
    datosNombre = []
    cantidades = [];

    datosjson.forEach(function (item, i) {
        datosNombre.push(datosjson[i].Nombre);
        cantidades.push(datosjson[i].Cantidad);
    });
    datosjson.forEach(function (item, i) {
        diagramDataSet = {
            label: datosjson[i].Nombre,
            backgroundColor: backgrounds[i],
            borderColor: borders[i],
            data: [0, datosjson[i].Cantidad],
            fill: false,

        }
        lineDiagramDataSets.push(diagramDataSet);
    });
    datosjson.forEach(function (item, i) {
        diagramDataSet = {
            label: datosjson[i].Nombre,
            backgroundColor: backgrounds[i],
            borderColor: borders[i],
            borderWidth: 1,
            data: [datosjson[i].Cantidad],
        }
        barDiagramDataSets.push(diagramDataSet);
    });


    //Graficas realizas con Chart.js
    // Grafica en linea
    var informe_lineas = new Chart(lineas, {
        type: 'line',
        data: {
            datasets: lineDiagramDataSets
        },
        options: {
            responsive: true,
            title: {
                display: true,
                text: 'Diagrama de lineas'
            },
            tooltips: {
                mode: 'index',
                intersect: false,
            },
            hover: {
                mode: 'nearest',
                intersect: true
            },
            scales: {
                yAxes: [{
                    display: true,
                    scaleLabel: {
                        display: true,
                        labelString: 'Cantidad'
                    }
                }]
            }
        }
    });


    //Grafica de barras
    var informe_barras = new Chart(barras, {
        type: 'bar',

        data: {
            datasets: barDiagramDataSets
        },

        options: {
            title: {
                display: true,
                text: 'Diagrama de barras'
            },
            scales: {
                yAxes: [{
                    scaleLabel: {
                        display: true,
                        labelString: 'Cantidad'
                    },
                    ticks: {
                        beginAtZero: true
                    }
                }]
            }
        }
    });

    var informe_circulo = new Chart(circulo, {
        type: 'pie',
        data: {
            labels: datosNombre,
            datasets: [{

                data: cantidades,
                backgroundColor: backgrounds,
                borderColor: borders,
                borderWidth: 1,
                barPercentage: .3,
            }]
        },
        options: {
            title: {
                display: true,
                text: 'Diagrama circular'
            },
        }

    });
</script>
