@model ToroCreativo.Models.Entities.Productos

@{
    Layout = "_LayoutCliente";
    ViewData["Title"] = "- " + Model.Nombre;
    var preciosFormato = String.Format("{0:#,##0}", ViewData["precioTotal"]);


    int idImagen = 1;
    int idSubImagen = 10;
    var caracteristicas = ViewBag.Caracteristicas;
}
@section Styles{
    <link rel="stylesheet" href="~/css/producto-detalle-cliente.css" />
    <link rel="stylesheet" href="~/css/estilos-generales.css" />
}


<div class="producto">
    <input type="hidden" id="idproducto" value="@Html.DisplayFor(model => model.idProductos)" for="idproducto">
    <div class="sub-imagenes">
        @foreach (var img in ViewBag.Imagen)
        {
            <div class="sub-imagen">
                <img id="@idSubImagen" class="sub-img" src="@("~/imgProductos/"+img.ImageName)" asp-append-version="true">
            </div>
            idSubImagen += 10;
        }


    </div>
    <div class="imagenes">
        @foreach (var img in ViewBag.Imagen)
        {
            if (img.Estado == "Principal")
            {
                <img id="@idImagen" class="img active" src="@("~/imgProductos/"+img.ImageName)" asp-append-version="true">
            }
            else
            {
                <img id="@idImagen" class="img" src="@("~/imgProductos/"+img.ImageName)" asp-append-version="true">
            }
            idImagen++;

        }
    </div>

    <div class="informacion">
        <div class="nombre">
            <h1>@Html.DisplayFor(model => model.Nombre)</h1>
            <div class="calificacion">
                <i class="fas fa-star calificador" id="1estrellas" title="Calificar"></i>
                <i class="fas fa-star calificador" id="2estrellas" title="Calificar"></i>
                <i class="fas fa-star calificador" id="3estrellas" title="Calificar"></i>
                <i class="fas fa-star calificador" id="4estrellas" title="Calificar"></i>
                <i class="fas fa-star calificador" id="5estrellas" title="Calificar"></i>
                <small id="cantidadCalificados"></small>
            </div>
        </div>
        <div class="descripcion">
            <h2 class="title">Descripción</h2>
            <p>@Html.DisplayFor(model => model.Descripcion)</p>
        </div>
        <div class="color-container">
            <h3 class="title">Colores</h3>
            <div class="colores">
                @foreach (var colores in ViewBag.Colores)
                {
                    <span id="@colores.Color" class="color" style="background-color: @colores.Color;"></span>
                }
            </div>
        </div>
        <div class="medidas-container">
            <h3 class="title">Medidas</h3>
            <p class="seleccionar">Seleccione un color para vizualisar sus medidas</p>
            <div class="medidas">
            </div>
        </div>
        <div class="precio">
            <h4>
                $ @preciosFormato<small>COP</small>
            </h4>
        </div>
        <div class="pedido">
            <div class="cantidad">
                <h5>Cantidad: </h5>
                <input id="cantidad" type="number" value="1" min="1">
                <p id="disponible">(... disponibles)</p>
            </div>
            <button id="agregar" class="agregar-carrito">Agregar <i class="fas fa-shopping-cart"></i></button>

        </div>
    </div>
</div>
@section Scripts{
    <script src="~/js/producto-detalle.js"></script>
    <script>
        @if (TempData["AgregadoCarrito"] != null && TempData["AgregadoCarrito"].ToString().Equals("si"))
        {
            <text>

                Swal.fire({
                    icon: 'success',
                    title: 'Se agrego al carrito',
                    html: ''
                });

            </text>
        }        

    </script>
    <script>
        $(document).ready(function () {
            $.ajax({
                type: "GET",
                dataType: "json",
                url: "/Calificacion/ObtenerCalificaciones",
                contentType: "application/json;charset=utf-8",
                data: 'id=' + @Model.idProductos,
                success: function (data) {
                    marcarCalificacion(data.calificacion);                    
                    $("#cantidadCalificados").text('(Calificación: '+ data.calificacion + ' de ' + data.cantidad +' calificaciones)');
                },
            });

            var caracteristicasJSON = JSON.parse('@Html.Raw(caracteristicas)');
            var cantidad = 0;
            $(".color").click(function () {
                var cantidadMedidas = 0;
                var color = $(this).attr("id");
                $(".medidas").empty();
                for (var i = 0; i < caracteristicasJSON.length; i++) {
                    if (caracteristicasJSON[i].Color == color && caracteristicasJSON[i].Cantidad > 0) {
                        cantidadMedidas++;
                        $(".medidas").append('<span id="m-' + caracteristicasJSON[i].idCaracteristicas + '" class="medida">' + caracteristicasJSON[i].Medida + '</span>');
                    }
                }
                $("#cantidad").val(1);
                $("#disponible").text('(... disponibles)');
                if (cantidadMedidas > 0) {
                    $(".seleccionar").css("display", "none");
                }
                else {
                    $(".seleccionar").text('El color seleccionado no cuenta con medidas disponibles en este momento');
                }
            });

            $(document).on("click", ".medida", function () {
                var medida = $(this);
                var idMedida = $(medida).attr("id");
                var idCaracteristica = idMedida.substring(2, idMedida.length);
                var medidaActiva = document.getElementsByClassName("medida active");
                if (medidaActiva != null) {
                    $(medidaActiva).removeClass("active");
                }
                $(medida).addClass("active");
                for (var i = 0; i < caracteristicasJSON.length; i++) {
                    if (caracteristicasJSON[i].idCaracteristicas == idCaracteristica) {
                        cantidad = caracteristicasJSON[i].Cantidad;
                        $("#disponible").text('('+cantidad+' disponibles)');
                     }
                }
                $("#cantidad").val(1);
            });

            $("#cantidad").change(function () {
                var cantidadInput = $(this).val();
                if (cantidadInput < 1) {
                    $("#cantidad").val(1);
                }
                else if (cantidadInput > cantidad) {
                    $("#cantidad").val(cantidad);
                }
            });

            $(".calificador").click(function () {
                var calificacion = $(this).attr("id").substring(0,1);
                marcarCalificacion(calificacion);
                Calificar(calificacion);
            })

            function Calificar(valor) {
                $.ajax({
                    type: "GET",
                    url: "/Calificacion/ValidarCalificacion",
                    data: {
                        idProducto: @Model.idProductos,
                    },
                    success: function (data) {
                        if (data == 1) {
                            Swal.fire({
                                icon: 'info',
                                title: '¿Deseas calificar el producto con una nota de ' + valor + '?',
                                html: '',
                                showCancelButton: true,
                                confirmButtonColor: '#804292',
                                confirmButtonText: 'Calificar Producto',
                                cancelButtonText: 'Cancelar'
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    var Calificacion = {
                                        IdProducto: @Model.idProductos,
                                        Calificacion: valor
                                    }
                                    $.ajax({
                                        method: "POST",
                                        url: '/Calificacion/CrearEditar',
                                        data: Calificacion,
                                        success: function (resp) {
                                            Swal.fire({
                                                icon: 'success',
                                                title: 'Calificación realizada con éxito',
                                                html: 'Te agradecemos por calificar nuestros productos, tú opinión es muy importante para nosotros'
                                            }).then((result) => {
                                                if (result.isConfirmed) {
                                                    location.reload();
                                                }
                                            });
                                        }
                                    });;
                                }
                            });
                        } else if (data == 2) {
                            Swal.fire({
                                icon: 'error',
                                title: 'No se pudo realizar la calificación',
                                html: 'No cuentas con una cuenta registrada, si quieres calificar un producto y disfrutar de muchas más funcionalidades inicia sesión'
                            });
                        } else if (data == 3) {
                            Swal.fire({
                                icon: 'error',
                                title: 'No se pudo realizar la calificación',
                                html: 'No puedes calificar dos veces el mismo producto'
                            });
                        } else if (data == 4) {
                            Swal.fire({
                                icon: 'error',
                                title: 'No se pudo realizar la calificación',
                                html: 'Lo sentimos, no puedes calificar un producto que no has comprado, esto lo hacemos para una opinión más asertiva y clara'
                            });
                        }
                    },
                });

            }
            function marcarCalificacion(calificacion) {
                for (let i = 0; i < 5; i++) {
                    if (i < calificacion) {
                        document.getElementById((i + 1) + 'estrellas').style.color = "orange";
                    }
                    else {
                        document.getElementById((i + 1) + 'estrellas').style.color = "black";
                    }
                }
            }
        });
        var contador;
        var calificacion;
        function Calificar(item) {
            contador = item.id[0];
            calificacion = item.id.substring(1);
            console.log(contador);
            for (let i = 0; i < 5; i++) {
                if (i < contador) {
                    document.getElementById((i + 1) + calificacion).style.color = "orange";
                }
                else {
                    document.getElementById((i + 1) + calificacion).style.color = "black";
                }
            }
        }

    </script>
}